openapi: 3.0.0
info:
  title: 15-Jobs-Api
  contact: {}
  version: '1.0'
servers:
- url: https://jobs-api-15.onrender.com/api/v1
  variables: {}
paths:
  /auth/login:
    post:
      tags:
      - Auth
      summary: Login user
      operationId: Loginuser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/LoginuserRequest'
              - example:
                  email: example13@gmail.com
                  password: app
            example:
              email: example13@gmail.com
              password: app
        required: true
      responses:
        '200':
          description: ''
          headers: 
            Set-Cookie:
              schema:
                type: string
                example: refreshToken=abcde12345; Path=/; HttpOnly
      deprecated: false
      security: []
  /auth/register:
    post:
      tags:
      - Auth
      summary: Register user
      operationId: Registeruser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RegisteruserRequest'
              - example:
                  name: _name
                  email: example13@gmail.com
                  password: app
            example:
              name: _name
              email: example13@gmail.com
              password: app
        required: true
      responses:
        '200':
          description: ''
          headers: 
            Cookie:
              schema:
                type: string
                example: refreshToken=abcde12345; Path=/; HttpOnly
      deprecated: false
      security: []
  /auth/refresh-token:
    post:
      tags:
      - Auth
      summary: Refresh Token
      operationId: RefreshToken
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /jobs:
    get:
      tags:
      - Jobs
      summary: Get all jobs
      operationId: Getalljobs
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    post:
      tags:
      - Jobs
      summary: Create job
      operationId: Createjob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreatejobRequest'
              - example:
                  position: front-end
                  company: zoho
            example:
              position: front-end
              company: zoho
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
    get:
      tags:
      - Jobs
      summary: Get single job
      operationId: Getsinglejob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    patch:
      tags:
      - Jobs
      summary: Update job
      operationId: Updatejob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdatejobRequest'
              - example:
                  position: full stack
            example:
              position: full stack
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    delete:
      tags:
      - Jobs
      summary: Delete job
      operationId: Deletejob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
components:
  schemas:
    LoginuserRequest:
      title: LoginuserRequest
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: example13@gmail.com
        password: app
    RegisteruserRequest:
      title: RegisteruserRequest
      required:
      - name
      - email
      - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: _name
        email: example13@gmail.com
        password: app
    CreatejobRequest:
      title: CreatejobRequest
      required:
      - position
      - company
      type: object
      properties:
        position:
          type: string
        company:
          type: string
      example:
        position: front-end
        company: zoho
    UpdatejobRequest:
      title: UpdatejobRequest
      required:
      - position
      type: object
      properties:
        position:
          type: string
      example:
        position: full stack
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
- name: Auth
  description: ''
- name: Jobs
  description: ''